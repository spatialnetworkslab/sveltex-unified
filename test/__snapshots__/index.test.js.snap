// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`codesandbox container processes correctly 1`] = `
"<iframe
  src=\\"https://codesandbox.io/embed/ozh6m?some?props\\"
  sandbox=\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\"
  style=\\"width:100%; height:500px; overflow:hidden;\\"
  class=\\"csb\\"
  title=\\"CodeSandbox for ./test/codesandbox/\\"
></iframe>"
`;

exports[`codesandboxplus container processes correctly 1`] = `
"<div><pre class=\\"language-html language-html\\"><code class=\\"language-html language-html\\"><span class=\\"token doctype\\">&#60;!DOCTYPE html&#62;</span>
<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>html</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>head</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>meta</span> <span class=\\"token attr-name\\">charset</span><span class=\\"token attr-value\\"><span class=\\"token punctuation\\">=</span><span class=\\"token punctuation\\">&#34;</span>UTF-8<span class=\\"token punctuation\\">&#34;</span></span> <span class=\\"token punctuation\\">/&#62;</span></span>
    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>title</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>A Title<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>title</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>head</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>

  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>body</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>h1</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>Big Header II<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>h1</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>body</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>html</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>

</code></pre><iframe
  src=\\"https://codesandbox.io/embed/yeyrp?some?props\\"
  sandbox=\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\"
  style=\\"width:100%; height:500px; overflow:hidden;\\"
  class=\\"csb\\"
  title=\\"CodeSandbox for ./test/codesandbox/index.html\\"
></iframe></div>"
`;

exports[`curlies in code blocks are escaped 1`] = `
"<pre class=\\"language-svelte\\"><code class=\\"language-svelte\\">  <span class=\\"token language-javascript\\"><span class=\\"token punctuation\\">&#123;</span>#<span class=\\"token keyword\\">if</span> x <span class=\\"token operator\\">&#62;</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">&#125;</span></span>
    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>p</span><span
  class=\\"token punctuation\\"
>&#62;</span></span><span
  class=\\"token language-javascript\\"
><span class=\\"token punctuation\\">&#123;</span>x<span class=\\"token punctuation\\">&#125;</span></span> is greater than 10<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>p</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
  <span class=\\"token language-javascript\\"><span class=\\"token punctuation\\">&#123;</span><span class=\\"token operator\\">/</span><span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">&#125;</span></span>
</code></pre>"
`;

exports[`curlies in in-line code are escaped 1`] = `"<p>A normal paragraph with <code>&#123;svelte&#125;</code> syntax</p>"`;

exports[`default container processes correctly 1`] = `"<div class=\\"testClass\\"><p>  some text here</p></div>"`;

exports[`highlight code block html syntax 1`] = `
"<pre class=\\"language-html\\"><code class=\\"language-html\\"><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>li</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>my list item<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>li</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
</code></pre>"
`;

exports[`highlight code block svelte syntax 1`] = `
"<pre class=\\"language-svelte\\"><code class=\\"language-svelte\\">  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>script</span><span
  class=\\"token punctuation\\"
>&#62;</span></span><span
  class=\\"token script\\"
><span class=\\"token language-javascript\\">
    <span class=\\"token keyword\\">let</span> x <span class=\\"token operator\\">=</span> <span class=\\"token number\\">7</span><span class=\\"token punctuation\\">;</span>
  </span></span><span
  class=\\"token tag\\"
><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>script</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>

  <span class=\\"token language-javascript\\"><span class=\\"token punctuation\\">&#123;</span>#<span class=\\"token keyword\\">if</span> x <span class=\\"token operator\\">&#62;</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">&#125;</span></span>
    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>p</span><span
  class=\\"token punctuation\\"
>&#62;</span></span><span
  class=\\"token language-javascript\\"
><span class=\\"token punctuation\\">&#123;</span>x<span class=\\"token punctuation\\">&#125;</span></span> is greater than 10<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>p</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
  <span class=\\"token language-javascript\\"><span class=\\"token punctuation\\">&#123;</span><span class=\\"token punctuation\\">:</span><span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token number\\">5</span> <span class=\\"token operator\\">&#62;</span> x<span class=\\"token punctuation\\">&#125;</span></span>
    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>p</span><span
  class=\\"token punctuation\\"
>&#62;</span></span><span
  class=\\"token language-javascript\\"
><span class=\\"token punctuation\\">&#123;</span>x<span class=\\"token punctuation\\">&#125;</span></span> is less than 5<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>p</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
  <span class=\\"token language-javascript\\"><span class=\\"token punctuation\\">&#123;</span><span class=\\"token punctuation\\">:</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">&#125;</span></span>
    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;</span>p</span><span
  class=\\"token punctuation\\"
>&#62;</span></span><span
  class=\\"token language-javascript\\"
><span class=\\"token punctuation\\">&#123;</span>x<span class=\\"token punctuation\\">&#125;</span></span> is between 5 and 10<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&#60;/</span>p</span><span
  class=\\"token punctuation\\"
>&#62;</span></span>
  <span class=\\"token language-javascript\\"><span class=\\"token punctuation\\">&#123;</span><span class=\\"token operator\\">/</span><span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">&#125;</span></span>
</code></pre>"
`;

exports[`highlight code block syntax 1`] = `
"<pre class=\\"language-js\\"><code class=\\"language-js\\"><span class=\\"token keyword\\">var</span> x <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span>
</code></pre>"
`;

exports[`paragraphs within else-if blocks should be terminated 1`] = `
"{#if a < 10}
<p>One</p>
{:else if a == 10}
<p>Two</p>
{:else}
<p>Three</p>
{/if}"
`;

exports[`process math block equation 1`] = `
"<p>Using a block equation:</p>
<div class=\\"math math-display\\"><span class=\\"katex-display\\"><span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation
  encoding=\\"application/x-tex\\"
>x + 1</annotation></semantics></math></span><span
  class=\\"katex-html\\"
  aria-hidden=\\"true\\"
><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.66666em;vertical-align:-0.08333em;\\"></span><span
  class=\\"mord mathdefault\\"
>x</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span><span
  class=\\"mbin\\"
>+</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span></span><span
  class=\\"base\\"
><span class=\\"strut\\" style=\\"height:0.64444em;vertical-align:0em;\\"></span><span
  class=\\"mord\\"
>1</span></span></span></span></span></div>
<p>Continue with normal paragraph</p>"
`;

exports[`process math inline equation 1`] = `
"<p>Inline equation <span class=\\"math math-inline\\"><span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation
  encoding=\\"application/x-tex\\"
>x + 1</annotation></semantics></math></span><span
  class=\\"katex-html\\"
  aria-hidden=\\"true\\"
><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.66666em;vertical-align:-0.08333em;\\"></span><span
  class=\\"mord mathdefault\\"
>x</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span><span
  class=\\"mbin\\"
>+</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span></span><span
  class=\\"base\\"
><span class=\\"strut\\" style=\\"height:0.64444em;vertical-align:0em;\\"></span><span
  class=\\"mord\\"
>1</span></span></span></span></span></p>"
`;

exports[`process math with curlies 1`] = `
"<p>Inline equation <span class=\\"math math-inline\\"><span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><msqrt><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow></msqrt><mo>+</mo><mo stretchy=\\"false\\">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><msup><mo stretchy=\\"false\\">)</mo><mn>2</mn></msup></mrow><annotation
  encoding=\\"application/x-tex\\"
>\\\\sqrt&#123;x-1&#125;+(1+x)^2</annotation></semantics></math></span><span
  class=\\"katex-html\\"
  aria-hidden=\\"true\\"
><span class=\\"base\\"><span
  class=\\"strut\\"
  style=\\"height:1.04em;vertical-align:-0.17444499999999996em;\\"
></span><span
  class=\\"mord sqrt\\"
><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8655550000000001em;\\"><span class=\\"svg-align\\" style=\\"top:-3em;\\"><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span
  class=\\"mord\\"
  style=\\"padding-left:0.833em;\\"
><span class=\\"mord mathdefault\\">x</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span><span
  class=\\"mbin\\"
>−</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span><span
  class=\\"mord\\"
>1</span></span></span><span
  style=\\"top:-2.825555em;\\"
><span class=\\"pstrut\\" style=\\"height:3em;\\"></span><span
  class=\\"hide-tail\\"
  style=\\"min-width:0.853em;height:1.08em;\\"
><svg
  width=\\"400em\\"
  height=\\"1.08em\\"
  viewBox=\\"0 0 400000 1080\\"
  preserveAspectRatio=\\"xMinYMin slice\\"
><path
  d=\\"M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z\\"
></path></svg></span></span></span><span
  class=\\"vlist-s\\"
>​</span></span><span
  class=\\"vlist-r\\"
><span class=\\"vlist\\" style=\\"height:0.17444499999999996em;\\"><span></span></span></span></span></span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span><span
  class=\\"mbin\\"
>+</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span></span><span
  class=\\"base\\"
><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span
  class=\\"mopen\\"
>(</span><span class=\\"mord\\">1</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span><span
  class=\\"mbin\\"
>+</span><span
  class=\\"mspace\\"
  style=\\"margin-right:0.2222222222222222em;\\"
></span></span><span
  class=\\"base\\"
><span class=\\"strut\\" style=\\"height:1.064108em;vertical-align:-0.25em;\\"></span><span
  class=\\"mord mathdefault\\"
>x</span><span class=\\"mclose\\"><span class=\\"mclose\\">)</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8141079999999999em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span
  class=\\"sizing reset-size6 size3 mtight\\"
><span class=\\"mord mtight\\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>"
`;

exports[`svelte blocks are processed correctly 1`] = `
"<script>

  let c = 'a script tag'
  $: milk = 'cookies'
  $: pine = 'apple'


    export let fill = 'black'

</script>

{#each ['one', 'two'] as item}
  <li>{ item }</li>
{/each}
<p>This is a test { 5 < 6 }
{ true && false }
{ string === \\"string\\" }</p>
<svelte:head>
<title>Sveltex Test</title>
</svelte:head>
<p>Test</p>
<Component cx={3} cy={3} r={3} {fill}>
  Test
</Componet>"
`;

exports[`svelte elements are processed correctly 1`] = `
"<p>Inline component <Component />
<Component cx={3} cy={3} r={3}>
Test
</Component></p>"
`;

exports[`svelte shorthand attrs are processed correctly 1`] = `
"<p>Inline component <span {x}>my span</span></p>
<Component cx={3} cy={3} r={3} {fill}>
  Test
</Component>"
`;
